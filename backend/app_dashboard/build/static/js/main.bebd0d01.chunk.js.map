{"version":3,"sources":["components/login.js","App.js","reportWebVitals.js","index.js"],"names":["RenderForm","props","component","state","form","id","action","method","className","type","name","placeholder","value","credentials","login","onChange","inputChanged","password","onClick","handleClick","prop","first_name","valid","changeHandler","message","last_name","email","username","password1","password2","register","getCookie","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","Login","event","form_data","FormData","data","key","append","fetch","headers","body","then","json","code","window","location","replace","getElementById","innerHTML","catch","error","console","log","Object","entries","map","keys","forEach","field","acc","setState","target","cred","inputAccChanged","account","this","Component","App","useState","setToken","userLogin","tk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bebd0d01.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport '../App.css';\r\n\r\n\r\n\r\nfunction RenderForm(props){\r\n    if(props.component.state.form === \"login\"){\r\n        return(\r\n            <>\r\n            <form id=\"form-admin\" action=\"../process/admin-login.php\" method=\"POST\">\r\n                <div id=\"admin-login-alert-box\"></div>\r\n                <div className=\"mb-3\">\r\n                    <input className=\"form-control form-control-lg\" type=\"text\" name=\"login\"\r\n                    placeholder=\"Email\" value={props.component.state.credentials.login} onChange={props.component.inputChanged}/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <input className=\"form-control form-control-lg\" type=\"password\" name=\"password\"\r\n                    placeholder=\"Password\" value={props.component.state.credentials.password} onChange={props.component.inputChanged}/>\r\n                </div>\r\n                <button type=\"button\" id=\"btn-signin\" className=\"btn btn-lg btn-primary btn-block mr-2 my-3\" onClick={props.component.login}>Sign\r\n                in</button>\r\n            </form>\r\n            <p>Not Registered? <span className=\"underlined text-primary pointer\" id=\"link-signup\" onClick={props.component.handleClick}>Create an Account Here</span></p>\r\n                        \r\n            </>\r\n        )\r\n    }\r\n    else if(props.component.state.form === \"signup\"){\r\n        let prop = props.component.state\r\n        return(\r\n            <>\r\n            <form id=\"form-admin\" action=\"../process/admin-login.php\" method=\"POST\">\r\n                <div id=\"admin-login-alert-box\"></div>\r\n                <div className=\"mb-3\">\r\n                    <input className={prop.first_name.valid ? \"form-control form-control-lg\" : \"form-control form-control-lg is-invalid\"}  type=\"text\" name=\"first_name\" id=\"first_name\"\r\n                    placeholder=\"First Name\" value={prop.first_name.value} onChange={props.component.changeHandler}/>\r\n                    <div className=\"invalid-feedback text-left\">\r\n                        {prop.first_name.message}\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <input className={prop.last_name.valid ? \"form-control form-control-lg\" : \"form-control form-control-lg is-invalid\"} type=\"text\" name=\"last_name\" id=\"last_name\"\r\n                    placeholder=\"Last Name\" value={prop.last_name.value} onChange={props.component.changeHandler}/>\r\n                    <div className=\"invalid-feedback text-left\">\r\n                        {prop.last_name.message}\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <input className={prop.email.valid ? \"form-control form-control-lg\" : \"form-control form-control-lg is-invalid\"} type=\"email\" name=\"email\" id=\"email\"\r\n                    placeholder=\"Email\" value={prop.email.value} onChange={props.component.changeHandler}/>\r\n                    <div className=\"invalid-feedback text-left\">\r\n                        {prop.email.message}\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <input className={prop.username.valid ? \"form-control form-control-lg\" : \"form-control form-control-lg is-invalid\"} type=\"text\" name=\"username\" id=\"username\"\r\n                    placeholder=\"Username\" value={prop.username.value} onChange={props.component.changeHandler}/>\r\n                    <div className=\"invalid-feedback text-left\">\r\n                        {prop.username.message}\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <input className={prop.password1.valid ? \"form-control form-control-lg\" : \"form-control form-control-lg is-invalid\"} type=\"password\" name=\"password1\" id=\"password1\"\r\n                    placeholder=\"Password\" value={prop.password1.value} onChange={props.component.changeHandler}/>\r\n                    <div className=\"invalid-feedback text-left\">\r\n                        {prop.password1.message}\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <input className={prop.password2.valid ? \"form-control form-control-lg\" : \"form-control form-control-lg is-invalid\"} type=\"password\" name=\"password2\" id=\"password2\"\r\n                    placeholder=\"Re-enter Password\" value={prop.password2.value} onChange={props.component.changeHandler}/>\r\n                    <div className=\"invalid-feedback text-left\">\r\n                        {prop.password2.message}\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" id=\"btn-signin\" className=\"btn btn-lg btn-primary btn-block mr-2 my-3\" onClick={props.component.register}>Sign\r\n                up</button>\r\n            </form>\r\n            <p>Already Registered? <span className=\"underlined text-primary pointer\" id=\"link-signup\" onClick={props.component.handleClick}>Click Here to Login</span></p>\r\n               \r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nfunction getCookie(name) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            // Does this cookie string begin with the name we want?\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        form: \"login\",\r\n        first_name: {\r\n            value: \"\",\r\n            valid: true,\r\n            message: \"\"\r\n        },\r\n        last_name: {\r\n            value: \"\",\r\n            valid: true,\r\n            message: ''\r\n        },\r\n        email: {\r\n            value: \"\",\r\n            valid: true,\r\n            message: ''\r\n        },\r\n        username: {\r\n            value: \"\",\r\n            valid: true,\r\n            message: ''\r\n        },\r\n        password1: {\r\n            value: \"\",\r\n            valid: true,\r\n            message: ''\r\n        },\r\n        password2: {\r\n            value: \"\",\r\n            valid: true,\r\n            message: ''\r\n        },\r\n        credentials: {login: '', password:''}\r\n    }\r\n\r\n    login = event =>{\r\n        //console.log(this.state.credentials)\r\n        let form_data = new FormData();\r\n        let data = this.state.credentials\r\n        for ( var key in data ) {\r\n            form_data.append(key, data[key]);\r\n        }\r\n        fetch('http://127.0.0.1:8000/login/', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            },\r\n            body: form_data,\r\n\r\n        }).then(data=>data.json()).then(data=>{\r\n            if(data.code == 200){\r\n                window.location.replace(\"./dashboard\")\r\n            }\r\n            else if(data.code == 403){\r\n                document.getElementById(\"admin-login-alert-box\").innerHTML = `\r\n                <div class=\"alert alert-danger\" role=\"alert\">\r\n                    Invalid Username/Password Please Try Again...\r\n                </div>\r\n                `\r\n            }\r\n            \r\n        }).catch(error =>console.error(error))\r\n    }\r\n\r\n    register = event =>{\r\n        let form_data = new FormData();\r\n        let prop = this\r\n        console.log(this.state)\r\n        {Object.entries(this.state).map(([key, value]) => (\r\n\r\n            form_data.append(key, value['value'])\r\n        ))}\r\n        //console.log(this.state.credentials)\r\n        fetch('http://127.0.0.1:8000/register/', {\r\n            method: \"POST\",\r\n            headers: {\r\n                'X-CSRFToken': getCookie('csrftoken')\r\n            },\r\n            body: form_data,\r\n\r\n        }).then(data=>data.json()).then(data=>{\r\n            if(data['data']['code'] == 200)\r\n                window.location.replace(\"./dashboard\")\r\n            else{\r\n                let keys = Object.keys(data['data'])\r\n                keys.forEach((field)=>{\r\n                    const acc = prop.state\r\n                    acc[field]['valid'] = false\r\n                    acc[field]['message'] = data['data'][field][0]['message']\r\n                    prop.setState({[field]: acc[field]})\r\n                    // console.log(prop.state.account.first_name)\r\n                    //renderErrors(field, data['data'][field][0]['message'])\r\n                })\r\n            }\r\n        }).catch(error =>console.error(error))\r\n    }\r\n\r\n    changeHandler = event => {\r\n        this.setState({ [event.target.name]: { value: event.target.value, valid: !!event.target.value } });\r\n      };\r\n\r\n    inputChanged = event =>{\r\n        const cred = this.state.credentials\r\n        cred[event.target.name] = event.target.value\r\n        this.setState({credentials: cred})\r\n    }\r\n\r\n    inputAccChanged = event =>{\r\n        const cred = this.state.account\r\n        cred[event.target.name]['value'] = event.target.value\r\n        this.setState({credentials: cred})\r\n    }\r\n\r\n    handleClick = ()=>{\r\n        if(this.state.form === \"login\"){\r\n            this.setState({form: \"signup\"})\r\n        }\r\n        else if(this.state.form === \"signup\"){\r\n            this.setState({form: \"login\"})\r\n        }\r\n    }\r\n    \r\n    render(){\r\n    return (\r\n        <div className=\"d-flex w-100\">\r\n            <div className=\"container d-flex flex-column\">\r\n                <div className=\"row vh-100\">\r\n                <div className=\"col-sm-10 col-md-8 col-lg-6 mx-auto d-table h-100\">\r\n                    <div className=\"d-table-cell align-middle\">\r\n                    <div className=\"text-center mt-4\">\r\n                        <h1 className=\"h2\">Sample Login-Registration System</h1>\r\n                        <p className=\"lead\">\r\n                        Developed by: Ezekiel Reginio\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\" id=\"card-body\">\r\n                        <div className=\"m-sm-4\" id=\"card-form\">\r\n                            <RenderForm component={this} />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","\nimport './App.css';\nimport Login from './components/login'\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  const [token, setToken] = useState('')\n\n  const userLogin = (tk)=>{\n    setToken(tk)\n  }\n\n  return (\n    <div className=\"App\">\n      <Login userLogin={userLogin}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}